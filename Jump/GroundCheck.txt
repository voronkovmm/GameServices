bool isJumping;
    bool enableDebugGroundCheck = true;
    void DebugGroundCheck()
    {
        float height = 0.1f;
        Vector3 centerDown = boxCollider.bounds.center + Vector3.down * boxCollider.bounds.extents.y;
        Color color = isJumping ? Color.green : Color.red;
        Debug.DrawRay(centerDown - new Vector3(boxCollider.bounds.extents.x, 0), Vector2.down * height, color);
        Debug.DrawRay(centerDown + new Vector3(boxCollider.bounds.extents.x, 0), Vector2.down * height, color);
        Debug.DrawRay(centerDown - new Vector3(boxCollider.bounds.extents.x, height), Vector3.right * boxCollider.bounds.size.x, color);
    }
    IEnumerator GroundCheck()
    {
        yield return new WaitForSeconds(0.5f);
        int numberLayerGround = 3;
        int bitMask = 1 << numberLayerGround;
        float height = 0.1f;
        float endTimer = 5f;
        while((endTimer -= Time.deltaTime) > 0)
        {
            Vector3 centerDown = boxCollider.bounds.center + Vector3.down * boxCollider.bounds.extents.y;
            RaycastHit2D result = Physics2D.BoxCast(centerDown, new Vector2(boxCollider.size.x, height), 0, Vector2.down, 0, bitMask);
            
            if (result.collider != null)
            {
                jumpPressed = false;
                isJumping = false;
                break;
            }

            yield return null;
        }
    }